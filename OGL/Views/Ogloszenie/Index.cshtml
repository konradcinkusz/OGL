
@using PagedList.Mvc;
@model PagedList.IPagedList<Repozytorium.Models.Ogloszenie>
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*@model IEnumerable<Repozytorium.Models.Ogloszenie>*@
@* https://stackoverflow.com/questions/23293886/mvc-uppercase-model-vs-lowercase-model *@
@* https://stackoverflow.com/questions/30420960/difference-between-razor-view-taking-a-ienumerablemodel-vs-model *@
@{
    //https://www.codeproject.com/Articles/476967/What-is-ViewData-ViewBag-and-TempData-MVC-Option
    ViewBag.Tytul = "Lista ogloszen - metatytul do 60 znakow";
    ViewBag.Opis = "Lista ogloszen z naszej aplikacji-metaopis do 160 znakow";
    ViewBag.SlowaKluczowe = "lista, ogloszen, slowa, kluczowe, apliakcja";
}

<h2>Lista ogloszen</h2>

<p>
    @if (User.Identity.IsAuthenticated)
    {
        @Html.ActionLink("Dodaj nowe ogloszenie", "Create", null, new { @class = "btn btn-primary" })
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Uzytkownik ID", "Index", new { sortOrder = ViewBag.IdSort })
        </th>
        <th>@Html.ActionLink("Tresc", "Index", new { sortOrder = ViewBag.TrescSort })
        </th>
        <th>
            @Html.ActionLink("Tytuł", "Index", new { sortOrder = ViewBag.TytulSort })
        </th>
        <th>
            @Html.ActionLink("Data dodania", "Index", new { sortOrder = ViewBag.DatatDodaniaSort })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UzytkownikId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tresc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tytul)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataDodania)
            </td>
            <td>
                @Html.ActionLink("Szczegoly", "Details", new { id = item.ID }, new { @class = "btn btn-warning" })
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin") || User.IsInRole("Pracownik"))
                {
                    <br />
                    @Html.ActionLink("Edytuj", "Edit", new { id = item.ID }, new { @class = "btn btn-primary" })
                    if (User.IsInRole("Admin"))
                    {
                        <br />
                        @Html.ActionLink("Usun", "Delete", new { id = item.ID }, new { @class = "btn btn-danger" })
                    }
                }
            </td>
        </tr>

    }

</table>
<div>
    Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort }))
</div>
